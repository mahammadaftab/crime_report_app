generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum ReportStatus {
  PENDING
  IN_PROGRESS
  RESOLVED
  DISMISSED
}

enum ReportType {
  EMERGENCY
  NON_EMERGENCY
}

model Report {
  id             String   @id @default(cuid())
  reportId       String      @unique
  type           ReportType
  title          String
  description    String
  reportType     String
  location       String?
  image          String?
  reporterName   String?
  reporterPhone  String?
  status         ReportStatus @default(PENDING)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  @@index([reportId])
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  name           String
  password       String
  role           Role     @default(USER)
  emailVerified  Boolean  @default(false)
  verificationOTP String?
  otpExpiresAt   DateTime?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relation to user-specific data
  userProfile    UserProfile?
}

model UserProfile {
  id             Int      @id @default(autoincrement())
  userId         Int      @unique
  phone          String?
  address        String?
  dateOfBirth    DateTime?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user           User     @relation(fields: [userId], references: [id])
}

model Admin {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  name           String
  password       String
  role           Role     @default(ADMIN)
  emailVerified  Boolean  @default(false)
  verificationOTP String?  @default("111111")
  otpExpiresAt   DateTime?
  department     String?
  permissions    String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relation to admin-specific data
  adminProfile   AdminProfile?
}

model AdminProfile {
  id             Int      @id @default(autoincrement())
  adminId        Int      @unique
  phone          String?
  department     String?
  position       String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  admin          Admin    @relation(fields: [adminId], references: [id])
}

enum Role {
  ADMIN
  MODERATOR
  USER
} 

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  email     String   @db.VarChar(255)
  message   String   @db.Text
  status    ContactStatus @default(RECEIVED)
  ip        String?  @db.VarChar(45)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ContactStatus {
  RECEIVED
  READ
  RESPONDED
  CLOSED
}